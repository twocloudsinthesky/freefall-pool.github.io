<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>跃入深蓝</title>
    <link>https://twocloudsinthesky.github.io/</link>
    <description>Recent content on 跃入深蓝</description>
    <generator>Hugo</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 31 Dec 2024 18:50:16 +0800</lastBuildDate>
    <atom:link href="https://twocloudsinthesky.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>走一点弯路——建博客也不是那么容易哇</title>
      <link>https://twocloudsinthesky.github.io/post/%E8%B5%B0%E4%B8%80%E7%82%B9%E5%BC%AF%E8%B7%AF/</link>
      <pubDate>Tue, 31 Dec 2024 18:50:16 +0800</pubDate>
      <guid>https://twocloudsinthesky.github.io/post/%E8%B5%B0%E4%B8%80%E7%82%B9%E5%BC%AF%E8%B7%AF/</guid>
      <description>&lt;p&gt;光看教程觉得建基于Hugo的博客还是很简单的嘛毕竟只有几行代码，但实际做的时候发现还是很容易踩坑的。但幸好今天值班💔，可以有一个晚上的空闲时间来钻研一下这个东西。&lt;/p&gt;&#xA;&lt;p&gt;Hugo本体的安装其实非常简单，MacOs 的终端和brew让安装Hugo变成执行一行代码的过程，所以翻车原因不在这里。&lt;/p&gt;&#xA;&lt;p&gt;翻车部分主要在于怎样把&lt;strong&gt;Hugo和Github pages关联起来&lt;/strong&gt;。&lt;br&gt;&#xA;这部分主要参考了以下几个教程：&lt;br&gt;&#xA;1.&lt;a href=&#34;https://www.cnblogs.com/liumylay/articles/17936667.html&#34;&gt;利用Hugo+Github Pages搭建个人博客 - Serendiplay&lt;/a&gt;&lt;br&gt;&#xA;2.&lt;a href=&#34;https://blog.csdn.net/freeking101/article/details/135515958&#34;&gt;使用 Github、Hugo 搭建个人博客_hugo教程&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;在搭建完成以后回过头复盘，其实可以看出来整个逻辑挺简单的。&#xA;即使用Hugo生成一个静态网页，把包含这个网页信息的public文件夹通过git语法远程上传到github上已经搭建好的repo里。&lt;/p&gt;&#xA;&lt;p&gt;但各教程中指令稍有冲突（或者说指令模糊），最开始试图把它们大杂烩起来但很显然这样做并不明智。于是推库（？）重建，再多次尝试以后终于成功了。&#xA;姑且放上一些我踩到的坑。&lt;/p&gt;&#xA;&lt;h4 id=&#34;mistake1忘了把本地的git库和远程库连起来&#34;&gt;Mistake1：忘了把本地的git库和远程库连起来。&lt;/h4&gt;&#xA;&lt;p&gt;通过删库重新输代码解决，很笨但有效。&lt;/p&gt;&#xA;&lt;h4 id=&#34;mistake2分支名错误git-pull命令报错&#34;&gt;Mistake2：分支名错误（git pull命令报错）&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;当前分支没有跟踪信息。&#xA;请指定您要合并哪一个分支。&#xA;详见 git-pull(1)。&#xA;&#xA;    git pull &amp;lt;remote&amp;gt; &amp;lt;branch&amp;gt;&#xA;&#xA;如果您想要为此分支创建跟踪信息，您可以执行：&#xA;&#xA;    git branch --set-upstream-to=origin/&amp;lt;branch&amp;gt; master&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;不知道为什么实际生成的分支是origin/main,而所有提供的教程里远程上传用的都是main。&#xA;最后把main追踪到origin/main解决。多谢提示！&#xA;&lt;code&gt;git branch –set-upstream-to=origin/main main&lt;/code&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;mistake3远程上传拒绝请求&#34;&gt;Mistake3：远程上传拒绝请求&lt;/h4&gt;&#xA;&lt;p&gt;出现过以下两种情况&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;error: 无法推送一些引用到 ‘git@github.com:xxx’&#xA;提示：更新被拒绝，因为远程版本库包含您本地尚不存在的提交。这通常是因为另外&#xA;提示：一个版本库已推送了相同的引用。再次推送前，您可能需要先合并远程变更&#xA;提示：（如 ‘git pull’）。&#xA;提示：详见 ‘git push –help’ 中的 ‘Note about fast-forwards’ 小节。&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;提示：更新被拒绝，因为您当前分支的最新提交落后于其对应的远程分支。&#xA;提示：再次推送前，先与远程变更合并（如 &amp;#39;git pull ...&amp;#39;）。详见&#xA;提示：&amp;#39;git push --help&amp;#39; 中的 &amp;#39;Note about fast-forwards&amp;#39; 小节&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本质就是远程和本地库的不同步。但网上的解决方案大多都是先用fetch再用merge指令，但我一merge就提示无效，大概是又绕回到mistake2上。解决了2，3也就解决了。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
